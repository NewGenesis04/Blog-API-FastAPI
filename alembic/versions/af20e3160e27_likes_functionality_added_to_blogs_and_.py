"""Likes Functionality added to Blogs and Comments

Revision ID: af20e3160e27
Revises: 10451e6a96b8
Create Date: 2025-06-25 02:25:15.591830

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'af20e3160e27'
down_revision: Union[str, None] = '10451e6a96b8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to User
    op.add_column('users', sa.Column('job_description', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP')))
    op.add_column('users', sa.Column('cover_photo_url', sa.String(length=255), nullable=True))

    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'])
    
    # Add likes to Blog
    op.add_column('blogs', sa.Column('likes', sa.Integer(), nullable=False, server_default='0'))
    op.create_index(op.f('ix_blogs_likes'), 'blogs', ['likes'], unique=False)
    
    # Add likes to Comment
    op.add_column('comments', sa.Column('likes', sa.Integer(), nullable=False, server_default='0'))
    op.create_index(op.f('ix_comments_likes'), 'comments', ['likes'], unique=False)
    
    # Create BlogLike table
    op.create_table('blog_likes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('blog_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_likes_blog_id'), 'blog_likes', ['blog_id'], unique=False)
    op.create_index(op.f('ix_blog_likes_user_id'), 'blog_likes', ['user_id'], unique=False)
    
    # Create CommentLike table
    op.create_table('comment_likes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('comment_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_likes_comment_id'), 'comment_likes', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_likes_user_id'), 'comment_likes', ['user_id'], unique=False)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'job_description')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'cover_photo_url')
    op.drop_column('blogs', 'likes')
    op.drop_column('comments', 'likes')
    op.drop_table('comment_likes')
    op.drop_table('blog_likes')
    # ### end Alembic commands ###
