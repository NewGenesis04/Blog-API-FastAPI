"""Initial schema for Render

Revision ID: 667ab06e6519
Revises: 1fe108fb1738
Create Date: 2025-02-28 18:33:24.889110

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '667ab06e6519'
down_revision: Union[str, None] = '1fe108fb1738'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_blogs_created_at', table_name='blogs')
    op.drop_index('ix_blogs_id', table_name='blogs')
    op.drop_index('ix_blogs_published', table_name='blogs')
    op.drop_index('ix_blogs_published_at', table_name='blogs')
    op.drop_index('ix_blogs_tag', table_name='blogs')
    op.drop_table('blogs')
    op.drop_table('follows')
    op.drop_index('ix_comments_author_id', table_name='comments')
    op.drop_index('ix_comments_blog_id', table_name='comments')
    op.drop_index('ix_comments_created_at', table_name='comments')
    op.drop_index('ix_comments_id', table_name='comments')
    op.drop_table('comments')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('blog_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='comments_author_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], name='comments_blog_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.create_index('ix_comments_id', 'comments', ['id'], unique=False)
    op.create_index('ix_comments_created_at', 'comments', ['created_at'], unique=False)
    op.create_index('ix_comments_blog_id', 'comments', ['blog_id'], unique=False)
    op.create_index('ix_comments_author_id', 'comments', ['author_id'], unique=False)
    op.create_table('follows',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('follower_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('followed_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], name='follows_followed_id_fkey'),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], name='follows_followed_id_fkey1'),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name='follows_follower_id_fkey'),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name='follows_follower_id_fkey1'),
    sa.PrimaryKeyConstraint('id', name='follows_pkey')
    )
    op.create_table('blogs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tag', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='blogs_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blogs_pkey')
    )
    op.create_index('ix_blogs_tag', 'blogs', ['tag'], unique=False)
    op.create_index('ix_blogs_published_at', 'blogs', ['published_at'], unique=False)
    op.create_index('ix_blogs_published', 'blogs', ['published'], unique=False)
    op.create_index('ix_blogs_id', 'blogs', ['id'], unique=False)
    op.create_index('ix_blogs_created_at', 'blogs', ['created_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=255), server_default=sa.text("'reader'::character varying"), autoincrement=False, nullable=False),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profile_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    # ### end Alembic commands ###
